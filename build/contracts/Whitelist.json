{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_maxWhitelistedAddresses",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_feeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numAddressesWhitelisted",
          "type": "uint8"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numAddressesWhitelisted",
          "type": "uint8"
        }
      ],
      "name": "PaidAdded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAccount",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWhitelistedAddresses",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAddressesWhitelisted",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "/Users/blackshuck/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "3": "contracts/Whitelist.sol"
  },
  "ast": {
    "absolutePath": "contracts/Whitelist.sol",
    "exportedSymbols": {
      "KeeperBase": [
        220
      ],
      "KeeperCompatible": [
        190
      ],
      "KeeperCompatibleInterface": [
        239
      ],
      "Whitelist": [
        181
      ]
    },
    "id": 182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:3"
      },
      {
        "absolutePath": "/Users/blackshuck/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/KeeperCompatible.sol",
        "file": "@chainlink/contracts/src/v0.8/KeeperCompatible.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 191,
        "src": "67:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "KeeperCompatibleInterface",
              "nameLocations": [
                "151:25:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 239,
              "src": "151:25:3"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "151:25:3"
          }
        ],
        "canonicalName": "Whitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 181,
        "linearizedBaseContracts": [
          181,
          239
        ],
        "name": "Whitelist",
        "nameLocation": "138:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65e17c9d",
            "id": 6,
            "mutability": "immutable",
            "name": "feeAccount",
            "nameLocation": "286:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "253:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "253:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31a72188",
            "id": 8,
            "mutability": "mutable",
            "name": "maxWhitelistedAddresses",
            "nameLocation": "347:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "334:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "334:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4011d7cd",
            "id": 10,
            "mutability": "mutable",
            "name": "numAddressesWhitelisted",
            "nameLocation": "442:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "429:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 9,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "429:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69e15404",
            "id": 12,
            "mutability": "mutable",
            "name": "feeAmount",
            "nameLocation": "524:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "509:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "581:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "576:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "576:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "interval",
            "nameLocation": "605:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "600:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "600:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06c933d8",
            "id": 20,
            "mutability": "mutable",
            "name": "whitelistedAddresses",
            "nameLocation": "700:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "668:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "676:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "668:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "687:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "af14ae339d1c11c4bd3934729293fcf6e9b0aff7aedad80683297f0ad18f847f",
            "id": 26,
            "name": "Added",
            "nameLocation": "783:5:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "805:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "789:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numAddressesWhitelisted",
                  "nameLocation": "818:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "812:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:55:3"
            },
            "src": "777:67:3"
          },
          {
            "anonymous": false,
            "eventSelector": "e896cf8a3e0e72907dca4b8c84e8d9ca30f10b4864551b42064d67b9e59822f9",
            "id": 32,
            "name": "PaidAdded",
            "nameLocation": "855:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "881:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "865:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numAddressesWhitelisted",
                  "nameLocation": "894:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "888:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "864:55:3"
            },
            "src": "849:71:3"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "1049:204:3",
              "statements": [
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "maxWhitelistedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1059:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42,
                      "name": "_maxWhitelistedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1085:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1059:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:50:3"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1119:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46,
                      "name": "_feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1129:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1119:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:20:3"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1149:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1163:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1169:9:3",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1163:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1149:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:29:3"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "feeAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1188:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1207:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1211:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1207:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1199:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1199:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1188:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:30:3"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1228:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1237:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1228:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:18:3"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_maxWhitelistedAddresses",
                  "nameLocation": "988:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "982:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_feeAmount",
                  "nameLocation": "1022:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1014:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_interval",
                  "nameLocation": "1039:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1034:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:68:3"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:3"
            },
            "scope": 181,
            "src": "970:283:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1337:442:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1404:33:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 71,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1405:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "expression": {
                              "id": 72,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1426:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1430:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1426:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1405:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320416c7265616479204c6973746564203a2f",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e9a4cd211cc2e9cb461039637f426d12ba86751da2563e1b17f8d08d4f696b1",
                          "typeString": "literal_string \"Address Already Listed :/\""
                        },
                        "value": "Address Already Listed :/"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e9a4cd211cc2e9cb461039637f426d12ba86751da2563e1b17f8d08d4f696b1",
                          "typeString": "literal_string \"Address Already Listed :/\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1396:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80,
                          "name": "numAddressesWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1537:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 81,
                          "name": "maxWhitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1563:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1537:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178204e756d626572206f6620416464726573736573204163686965766564203a28",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b06f36ed6cbfef78c704ea3d73fa10dc39b3646b79354f88a0200554d81b8c16",
                          "typeString": "literal_string \"Max Number of Addresses Achieved :(\""
                        },
                        "value": "Max Number of Addresses Achieved :("
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b06f36ed6cbfef78c704ea3d73fa10dc39b3646b79354f88a0200554d81b8c16",
                          "typeString": "literal_string \"Max Number of Addresses Achieved :(\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:97:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:97:3"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1671:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1692:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1696:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1692:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1671:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1706:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1671:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:39:3"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1747:25:3",
                    "subExpression": {
                      "id": 93,
                      "name": "numAddressesWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1747:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:25:3"
                }
              ]
            },
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_AddAddressToWhitelist",
            "nameLocation": "1304:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1326:2:3"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1337:0:3"
            },
            "scope": 181,
            "src": "1295:484:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1863:358:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1876:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1889:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1876:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "2031:184:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 116,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2065:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 113,
                              "name": "feeAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "2045:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2056:8:3",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2045:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2045:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "2045:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 119,
                            "name": "_AddAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2089:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2089:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "2089:24:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2168:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2172:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2168:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 125,
                              "name": "numAddressesWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2180:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 122,
                            "name": "PaidAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2158:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
                              "typeString": "function (address,uint8)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2158:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "EmitStatement",
                        "src": "2153:51:3"
                      }
                    ]
                  },
                  "id": 129,
                  "nodeType": "IfStatement",
                  "src": "1873:342:3",
                  "trueBody": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "1891:136:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 103,
                            "name": "_AddAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1905:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:24:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 107,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1980:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1984:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1980:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 109,
                              "name": "numAddressesWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1992:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 106,
                            "name": "Added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1974:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
                              "typeString": "function (address,uint8)"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1974:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "EmitStatement",
                        "src": "1969:47:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8e7314d9",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAddressToWhitelist",
            "nameLocation": "1825:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1846:2:3"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:3"
            },
            "scope": 181,
            "src": "1816:405:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              232
            ],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2358:136:3",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 141,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2428:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 142,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2444:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2450:9:3",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2444:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 144,
                              "name": "lastTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2462:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2444:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 146,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2443:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 147,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2479:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2443:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2428:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:59:3"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "2236:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2289:8:3"
            },
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2248:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:32:3"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "2312:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2307:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2326:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:51:3"
            },
            "scope": 181,
            "src": "2227:267:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              238
            ],
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "2579:300:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 158,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2678:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2684:9:3",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2678:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 160,
                            "name": "lastTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2696:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2678:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2677:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 163,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2713:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2677:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "IfStatement",
                  "src": "2673:200:3",
                  "trueBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "2724:149:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 165,
                            "name": "lastTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2738:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 166,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2754:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2760:9:3",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2754:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2738:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2738:31:3"
                      },
                      {
                        "expression": {
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 170,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2829:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 171,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2841:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "32",
                                  "id": 172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2854:7:3",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2"
                                }
                              ],
                              "id": 173,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2853:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000"
                              }
                            },
                            "src": "2841:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2829:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "2829:33:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "2513:13:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2570:8:3"
            },
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "2527:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:34:3"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2579:0:3"
            },
            "scope": 181,
            "src": "2504:375:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 182,
        "src": "129:2752:3",
        "usedErrors": []
      }
    ],
    "src": "31:2850:3"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161068138038061068183398101604081905261002f91610057565b6000805460ff191660ff94909416939093179092556001554260025533608052600355610094565b60008060006060848603121561006c57600080fd5b835160ff8116811461007d57600080fd5b602085015160409095015190969495509392505050565b6080516105cb6100b660003960008181610144015261029301526105cb6000f3fe60806040526004361061007b5760003560e01c806365e17c9d1161004e57806365e17c9d1461013257806369e154041461017e5780636e04ff0d146101a25780638e7314d9146101d057600080fd5b806306c933d81461008057806331a72188146100c55780634011d7cd146100f15780634585e33b14610110575b600080fd5b34801561008c57600080fd5b506100b061009b36600461043a565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100d157600080fd5b506000546100df9060ff1681565b60405160ff90911681526020016100bc565b3480156100fd57600080fd5b506000546100df90610100900460ff1681565b34801561011c57600080fd5b5061013061012b36600461046a565b6101d8565b005b34801561013e57600080fd5b506101667f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b34801561018a57600080fd5b5061019460015481565b6040519081526020016100bc565b3480156101ae57600080fd5b506101c26101bd36600461046a565b61020f565b6040516100bc9291906104dc565b61013061022e565b6003546002546101e8904261054a565b111561020b574260025560015461020790671bc16d674ec80000610563565b6001555b5050565b6000606060035460025442610224919061054a565b1191509250929050565b60015460000361028357610240610320565b60005460405161010090910460ff16815233907faf14ae339d1c11c4bd3934729293fcf6e9b0aff7aedad80683297f0ad18f847f906020015b60405180910390a2565b6001546040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169180156108fc02916000818181858888f193505050501580156102da573d6000803e3d6000fd5b506102e3610320565b60005460405161010090910460ff16815233907fe896cf8a3e0e72907dca4b8c84e8d9ca30f10b4864551b42064d67b9e59822f990602001610279565b3360009081526004602052604090205460ff16156103855760405162461bcd60e51b815260206004820152601960248201527f4164647265737320416c7265616479204c6973746564203a2f0000000000000060448201526064015b60405180910390fd5b60005460ff80821661010090920416106103ed5760405162461bcd60e51b815260206004820152602360248201527f4d6178204e756d626572206f662041646472657373657320416368696576656460448201526204074560eb1b606482015260840161037c565b336000908152600460205260408120805460ff191660019081179091558154610100900460ff16919061041f83610576565b91906101000a81548160ff021916908360ff16021790555050565b60006020828403121561044c57600080fd5b81356001600160a01b038116811461046357600080fd5b9392505050565b6000806020838503121561047d57600080fd5b823567ffffffffffffffff8082111561049557600080fd5b818501915085601f8301126104a957600080fd5b8135818111156104b857600080fd5b8660208285010111156104ca57600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b81811015610512578581018301518582016060015282016104f6565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561055d5761055d610534565b92915050565b8082018082111561055d5761055d610534565b600060ff821660ff810361058c5761058c610534565b6001019291505056fea2646970667358221220d891d35f0d36bb73100433de0b3955101418e714cafb9dbc2b20394cd344fda764736f6c63430008110033",
  "bytecodeSha1": "9555d2a59d66e64726a5e9fded71ff81ba04c5cf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Whitelist",
  "coverageMap": {
    "branches": {
      "2": {},
      "3": {
        "Whitelist._AddAddressToWhitelist": {
          "14": [
            1404,
            1437,
            true
          ],
          "15": [
            1537,
            1586,
            true
          ]
        },
        "Whitelist.addAddressToWhitelist": {
          "13": [
            1876,
            1890,
            false
          ]
        },
        "Whitelist.performUpkeep": {
          "12": [
            2677,
            2721,
            false
          ]
        }
      }
    },
    "statements": {
      "2": {},
      "3": {
        "Whitelist._AddAddressToWhitelist": {
          "8": [
            1396,
            1467
          ],
          "9": [
            1529,
            1626
          ],
          "10": [
            1671,
            1710
          ],
          "11": [
            1747,
            1772
          ]
        },
        "Whitelist.addAddressToWhitelist": {
          "3": [
            1905,
            1929
          ],
          "4": [
            1969,
            2016
          ],
          "5": [
            2045,
            2075
          ],
          "6": [
            2089,
            2113
          ],
          "7": [
            2153,
            2204
          ]
        },
        "Whitelist.checkUpkeep": {
          "2": [
            2428,
            2487
          ]
        },
        "Whitelist.performUpkeep": {
          "0": [
            2738,
            2769
          ],
          "1": [
            2829,
            2862
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/KeeperCompatibleInterface"
  ],
  "deployedBytecode": "60806040526004361061007b5760003560e01c806365e17c9d1161004e57806365e17c9d1461013257806369e154041461017e5780636e04ff0d146101a25780638e7314d9146101d057600080fd5b806306c933d81461008057806331a72188146100c55780634011d7cd146100f15780634585e33b14610110575b600080fd5b34801561008c57600080fd5b506100b061009b36600461043a565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100d157600080fd5b506000546100df9060ff1681565b60405160ff90911681526020016100bc565b3480156100fd57600080fd5b506000546100df90610100900460ff1681565b34801561011c57600080fd5b5061013061012b36600461046a565b6101d8565b005b34801561013e57600080fd5b506101667f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b34801561018a57600080fd5b5061019460015481565b6040519081526020016100bc565b3480156101ae57600080fd5b506101c26101bd36600461046a565b61020f565b6040516100bc9291906104dc565b61013061022e565b6003546002546101e8904261054a565b111561020b574260025560015461020790671bc16d674ec80000610563565b6001555b5050565b6000606060035460025442610224919061054a565b1191509250929050565b60015460000361028357610240610320565b60005460405161010090910460ff16815233907faf14ae339d1c11c4bd3934729293fcf6e9b0aff7aedad80683297f0ad18f847f906020015b60405180910390a2565b6001546040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169180156108fc02916000818181858888f193505050501580156102da573d6000803e3d6000fd5b506102e3610320565b60005460405161010090910460ff16815233907fe896cf8a3e0e72907dca4b8c84e8d9ca30f10b4864551b42064d67b9e59822f990602001610279565b3360009081526004602052604090205460ff16156103855760405162461bcd60e51b815260206004820152601960248201527f4164647265737320416c7265616479204c6973746564203a2f0000000000000060448201526064015b60405180910390fd5b60005460ff80821661010090920416106103ed5760405162461bcd60e51b815260206004820152602360248201527f4d6178204e756d626572206f662041646472657373657320416368696576656460448201526204074560eb1b606482015260840161037c565b336000908152600460205260408120805460ff191660019081179091558154610100900460ff16919061041f83610576565b91906101000a81548160ff021916908360ff16021790555050565b60006020828403121561044c57600080fd5b81356001600160a01b038116811461046357600080fd5b9392505050565b6000806020838503121561047d57600080fd5b823567ffffffffffffffff8082111561049557600080fd5b818501915085601f8301126104a957600080fd5b8135818111156104b857600080fd5b8660208285010111156104ca57600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b81811015610512578581018301518582016060015282016104f6565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561055d5761055d610534565b92915050565b8082018082111561055d5761055d610534565b600060ff821660ff810361058c5761058c610534565b6001019291505056fea2646970667358221220d891d35f0d36bb73100433de0b3955101418e714cafb9dbc2b20394cd344fda764736f6c63430008110033",
  "deployedSourceMap": "129:2752:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:52;;;;;;;;;;-1:-1:-1;668:52:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;470:14:4;;463:22;445:41;;433:2;418:18;668:52:3;;;;;;;;334:36;;;;;;;;;;-1:-1:-1;334:36:3;;;;;;;;;;;669:4:4;657:17;;;639:36;;627:2;612:18;334:36:3;497:184:4;429:36:3;;;;;;;;;;-1:-1:-1;429:36:3;;;;;;;;;;;2504:375;;;;;;;;;;-1:-1:-1;2504:375:3;;;;;:::i;:::-;;:::i;:::-;;253:43;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1462:32:4;;;1444:51;;1432:2;1417:18;253:43:3;1282:219:4;509:24:3;;;;;;;;;;;;;;;;;;;1652:25:4;;;1640:2;1625:18;509:24:3;1506:177:4;2227:267:3;;;;;;;;;;-1:-1:-1;2227:267:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1816:405::-;;;:::i;2504:375::-;2713:8;;2696:13;;2678:31;;:15;:31;:::i;:::-;2677:44;2673:200;;;2754:15;2738:13;:31;2841:9;;:21;;2854:7;2841:21;:::i;:::-;2829:9;:33;2673:200;2504:375;;:::o;2227:267::-;2307:17;2326:12;2479:8;;2462:13;;2444:15;:31;;;;:::i;:::-;2443:44;2428:59;;2227:267;;;;;:::o;1816:405::-;1876:9;;1889:1;1876:14;1873:342;;1905:24;:22;:24::i;:::-;1992:23;;1974:42;;1992:23;;;;;;639:36:4;;1980:10:3;;1974:42;;627:2:4;612:18;1974:42:3;;;;;;;;1816:405::o;1873:342::-;2065:9;;2045:30;;-1:-1:-1;;;;;2045:10:3;:19;;:30;;;;;;;;;2065:9;2045:19;:30;;;;;;;;;;;;;;;;;;;;;2089:24;:22;:24::i;:::-;2180:23;;2158:46;;2180:23;;;;;;639:36:4;;2168:10:3;;2158:46;;627:2:4;612:18;2158:46:3;497:184:4;1295:484:3;1426:10;1405:32;;;;:20;:32;;;;;;;;1404:33;1396:71;;;;-1:-1:-1;;;1396:71:3;;2917:2:4;1396:71:3;;;2899:21:4;2956:2;2936:18;;;2929:30;2995:27;2975:18;;;2968:55;3040:18;;1396:71:3;;;;;;;;;1563:23;;;;;;;1537;;;;:49;1529:97;;;;-1:-1:-1;;;1529:97:3;;3271:2:4;1529:97:3;;;3253:21:4;3310:2;3290:18;;;3283:30;3349:34;3329:18;;;3322:62;-1:-1:-1;;;3400:18:4;;;3393:33;3443:19;;1529:97:3;3069:399:4;1529:97:3;1692:10;1671:32;;;;:20;:32;;;;;:39;;-1:-1:-1;;1671:39:3;1706:4;1671:39;;;;;;1747:25;;1671:39;1747:25;;1671:39;1747:25;;1671:32;1747:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1295:484::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;686:591::-;756:6;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;873:9;860:23;902:18;943:2;935:6;932:14;929:34;;;959:1;956;949:12;929:34;997:6;986:9;982:22;972:32;;1042:7;1035:4;1031:2;1027:13;1023:27;1013:55;;1064:1;1061;1054:12;1013:55;1104:2;1091:16;1130:2;1122:6;1119:14;1116:34;;;1146:1;1143;1136:12;1116:34;1191:7;1186:2;1177:6;1173:2;1169:15;1165:24;1162:37;1159:57;;;1212:1;1209;1202:12;1159:57;1243:2;1235:11;;;;;1265:6;;-1:-1:-1;686:591:4;;-1:-1:-1;;;;686:591:4:o;1688:627::-;1871:6;1864:14;1857:22;1846:9;1839:41;1820:4;1899:2;1937;1932;1921:9;1917:18;1910:30;1969:6;1963:13;2012:6;2007:2;1996:9;1992:18;1985:34;2037:1;2047:140;2061:6;2058:1;2055:13;2047:140;;;2156:14;;;2152:23;;2146:30;2122:17;;;2141:2;2118:26;2111:66;2076:10;;2047:140;;;2051:3;2236:1;2231:2;2222:6;2211:9;2207:22;2203:31;2196:42;2306:2;2299;2295:7;2290:2;2282:6;2278:15;2274:29;2263:9;2259:45;2255:54;2247:62;;;;1688:627;;;;;:::o;2320:127::-;2381:10;2376:3;2372:20;2369:1;2362:31;2412:4;2409:1;2402:15;2436:4;2433:1;2426:15;2452:128;2519:9;;;2540:11;;;2537:37;;;2554:18;;:::i;:::-;2452:128;;;;:::o;2585:125::-;2650:9;;;2671:10;;;2668:36;;;2684:18;;:::i;3473:175::-;3510:3;3554:4;3547:5;3543:16;3583:4;3574:7;3571:17;3568:43;;3591:18;;:::i;:::-;3640:1;3627:15;;3473:175;-1:-1:-1;;3473:175:4:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    129,
    2881
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65E17C9D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x65E17C9D EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x69E15404 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8E7314D9 EQ PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C933D8 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x31A72188 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x4011D7CD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x110 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xDF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xDF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP3 SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x130 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x1E8 SWAP1 TIMESTAMP PUSH2 0x54A JUMP JUMPDEST GT ISZERO PUSH2 0x20B JUMPI TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x1 SLOAD PUSH2 0x207 SWAP1 PUSH8 0x1BC16D674EC80000 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x54A JUMP JUMPDEST GT SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SUB PUSH2 0x283 JUMPI PUSH2 0x240 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0xFF AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xAF14AE339D1C11C4BD3934729293FCF6E9B0AFF7AEDAD80683297F0AD18F847F SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0xFF AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xE896CF8A3E0E72907DCA4B8C84E8D9CA30F10B4864551B42064D67B9E59822F9 SWAP1 PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320416C7265616479204C6973746564203A2F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND LT PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E756D626572206F6620416464726573736573204163686965766564 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x40745 PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 PUSH2 0x41F DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x512 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x55D JUMPI PUSH2 0x55D PUSH2 0x534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x55D JUMPI PUSH2 0x55D PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 SWAP2 0xD3 0x5F 0xD CALLDATASIZE 0xBB PUSH20 0x100433DE0B3955101418E714CAFB9DBC2B20394C 0xD3 DIFFICULTY REVERT 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B"
    },
    "12": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x65E17C9D"
    },
    "25": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x65E17C9D"
    },
    "36": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x132"
    },
    "40": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x69E15404"
    },
    "47": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E"
    },
    "51": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6E04FF0D"
    },
    "58": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A2"
    },
    "62": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8E7314D9"
    },
    "69": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0"
    },
    "73": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "REVERT",
      "path": "3"
    },
    "78": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "79": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6C933D8"
    },
    "85": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80"
    },
    "89": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x31A72188"
    },
    "96": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5"
    },
    "100": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4011D7CD"
    },
    "107": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF1"
    },
    "111": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4585E33B"
    },
    "118": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x110"
    },
    "122": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "126": {
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "127": {
      "first_revert": true,
      "fn": null,
      "offset": [
        129,
        2881
      ],
      "op": "REVERT",
      "path": "3"
    },
    "128": {
      "offset": [
        668,
        720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "129": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "131": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "135": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "offset": [
        668,
        720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0"
    },
    "145": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B"
    },
    "148": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "149": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "151": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "154": {
      "fn": null,
      "jump": "i",
      "offset": [
        668,
        720
      ],
      "op": "JUMP",
      "path": "3"
    },
    "155": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "158": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "160": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "163": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "166": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "168": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "171": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "173": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "AND",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "JUMP",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "179": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "180": {
      "op": "SWAP1"
    },
    "181": {
      "op": "ISZERO"
    },
    "182": {
      "op": "ISZERO"
    },
    "183": {
      "op": "DUP2"
    },
    "184": {
      "op": "MSTORE"
    },
    "185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "187": {
      "op": "ADD"
    },
    "188": {
      "offset": [
        668,
        720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "189": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "191": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "193": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SUB",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        668,
        720
      ],
      "op": "RETURN",
      "path": "3"
    },
    "197": {
      "offset": [
        334,
        370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "198": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "199": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1"
    },
    "204": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "REVERT",
      "path": "3"
    },
    "209": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "210": {
      "op": "POP"
    },
    "211": {
      "offset": [
        334,
        370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "213": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "217": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "220": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "AND",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "226": {
      "fn": null,
      "offset": [
        334,
        370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "227": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "229": {
      "op": "SWAP1"
    },
    "230": {
      "op": "SWAP2"
    },
    "231": {
      "op": "AND"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "offset": [
        334,
        370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "240": {
      "op": "JUMP"
    },
    "241": {
      "offset": [
        429,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "242": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "243": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "244": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD"
    },
    "248": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "DUP1",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "REVERT",
      "path": "3"
    },
    "253": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "254": {
      "op": "POP"
    },
    "255": {
      "offset": [
        429,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "257": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "258": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF"
    },
    "261": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "262": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "265": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "DIV",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "269": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "AND",
      "path": "3"
    },
    "270": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "271": {
      "fn": null,
      "offset": [
        429,
        465
      ],
      "op": "JUMP",
      "path": "3"
    },
    "272": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "273": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "274": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "DUP1",
      "path": "3"
    },
    "275": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "276": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C"
    },
    "279": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "280": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "282": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "DUP1",
      "path": "3"
    },
    "283": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "REVERT",
      "path": "3"
    },
    "284": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "285": {
      "op": "POP"
    },
    "286": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "289": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B"
    },
    "292": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "293": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "295": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46A"
    },
    "298": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMP",
      "path": "3"
    },
    "299": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "300": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8"
    },
    "303": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMP",
      "path": "3"
    },
    "304": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "305": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "STOP",
      "path": "3"
    },
    "306": {
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "307": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "308": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "309": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "310": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E"
    },
    "313": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "314": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "316": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "REVERT",
      "path": "3"
    },
    "318": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "319": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "POP",
      "path": "3"
    },
    "320": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x166"
    },
    "323": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "356": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "357": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "358": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "359": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "361": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "368": {
      "op": "SHL"
    },
    "369": {
      "op": "SUB"
    },
    "370": {
      "op": "SWAP1"
    },
    "371": {
      "op": "SWAP2"
    },
    "372": {
      "op": "AND"
    },
    "373": {
      "op": "DUP2"
    },
    "374": {
      "op": "MSTORE"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "377": {
      "op": "ADD"
    },
    "378": {
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "381": {
      "op": "JUMP"
    },
    "382": {
      "offset": [
        509,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "383": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "384": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "385": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "386": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "389": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "390": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "392": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "393": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "REVERT",
      "path": "3"
    },
    "394": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "POP",
      "path": "3"
    },
    "396": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x194"
    },
    "399": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "401": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "402": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "403": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "404": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "405": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "407": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        509,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "408": {
      "op": "SWAP1"
    },
    "409": {
      "op": "DUP2"
    },
    "410": {
      "op": "MSTORE"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "413": {
      "op": "ADD"
    },
    "414": {
      "offset": [
        509,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "417": {
      "op": "JUMP"
    },
    "418": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "419": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "420": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "DUP1",
      "path": "3"
    },
    "421": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "422": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE"
    },
    "425": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "426": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "428": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "DUP1",
      "path": "3"
    },
    "429": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "REVERT",
      "path": "3"
    },
    "430": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "435": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD"
    },
    "438": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "439": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "441": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46A"
    },
    "444": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "445": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "446": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "449": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "450": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "451": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "453": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "454": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "457": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "458": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "459": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "460": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DC"
    },
    "463": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "464": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1816,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "465": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1816,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "468": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1816,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22E"
    },
    "471": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        1816,
        2221
      ],
      "op": "JUMP",
      "path": "3"
    },
    "472": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "473": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2713,
        2721
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "475": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2713,
        2721
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "476": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2696,
        2709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "478": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2696,
        2709
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "479": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2678,
        2709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E8"
    },
    "482": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2678,
        2709
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "483": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2678,
        2693
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "484": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2678,
        2709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54A"
    },
    "487": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2678,
        2709
      ],
      "op": "JUMP",
      "path": "3"
    },
    "488": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2678,
        2709
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "489": {
      "branch": 12,
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2677,
        2721
      ],
      "op": "GT",
      "path": "3"
    },
    "490": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2673,
        2873
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "491": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2673,
        2873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20B"
    },
    "494": {
      "branch": 12,
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2673,
        2873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "495": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2754,
        2769
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 0
    },
    "496": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2738,
        2751
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "498": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2738,
        2769
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "499": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "501": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2850
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "502": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2862
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x207"
    },
    "505": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2862
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "506": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2854,
        2861
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0x1BC16D674EC80000"
    },
    "515": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2862
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x563"
    },
    "518": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2841,
        2862
      ],
      "op": "JUMP",
      "path": "3"
    },
    "519": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2841,
        2862
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2829,
        2838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "522": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2829,
        2862
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "523": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2673,
        2873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "524": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "POP",
      "path": "3"
    },
    "525": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2504,
        2879
      ],
      "op": "POP",
      "path": "3"
    },
    "526": {
      "fn": "Whitelist.performUpkeep",
      "jump": "o",
      "offset": [
        2504,
        2879
      ],
      "op": "JUMP",
      "path": "3"
    },
    "527": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2307,
        2324
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "530": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2326,
        2338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "532": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2479,
        2487
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x3"
    },
    "534": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2479,
        2487
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "535": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2462,
        2475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "537": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2462,
        2475
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "538": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2459
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "539": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224"
    },
    "542": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2475
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "543": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "544": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54A"
    },
    "547": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2444,
        2475
      ],
      "op": "JUMP",
      "path": "3"
    },
    "548": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2444,
        2475
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "549": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2443,
        2487
      ],
      "op": "GT",
      "path": "3"
    },
    "550": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2428,
        2487
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "551": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2428,
        2487
      ],
      "op": "POP",
      "path": "3"
    },
    "552": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "553": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "POP",
      "path": "3"
    },
    "554": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "555": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "556": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2227,
        2494
      ],
      "op": "POP",
      "path": "3"
    },
    "557": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "o",
      "offset": [
        2227,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "558": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1816,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "559": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1876,
        1885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "561": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1876,
        1885
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "562": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1889,
        1890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "564": {
      "branch": 13,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1876,
        1890
      ],
      "op": "SUB",
      "path": "3"
    },
    "565": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1873,
        2215
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x283"
    },
    "568": {
      "branch": 13,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1873,
        2215
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "569": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1905,
        1929
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x240"
    },
    "572": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1905,
        1927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x320"
    },
    "575": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        1905,
        1929
      ],
      "op": "JUMP",
      "path": "3"
    },
    "576": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1905,
        1929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "577": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x0"
    },
    "579": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "580": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "582": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "583": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "586": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "587": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "588": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "DIV",
      "path": "3"
    },
    "589": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "591": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1992,
        2015
      ],
      "op": "AND",
      "path": "3"
    },
    "592": {
      "op": "DUP2"
    },
    "593": {
      "op": "MSTORE"
    },
    "594": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1980,
        1990
      ],
      "op": "CALLER",
      "path": "3"
    },
    "595": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1980,
        1990
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "596": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xAF14AE339D1C11C4BD3934729293FCF6E9B0AFF7AEDAD80683297F0AD18F847F"
    },
    "629": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "634": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "636": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "637": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "DUP1",
      "path": "3"
    },
    "638": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "639": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "SUB",
      "path": "3"
    },
    "640": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "641": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1974,
        2016
      ],
      "op": "LOG2",
      "path": "3"
    },
    "642": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "o",
      "offset": [
        1816,
        2221
      ],
      "op": "JUMP",
      "path": "3"
    },
    "643": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1873,
        2215
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "644": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2065,
        2074
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x1"
    },
    "646": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2065,
        2074
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "647": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "649": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2055
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "691": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2064
      ],
      "op": "AND",
      "path": "3"
    },
    "692": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2064
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "693": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "694": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "695": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "698": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "MUL",
      "path": "3"
    },
    "699": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "700": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "702": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "703": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "704": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "705": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2065,
        2074
      ],
      "op": "DUP6",
      "path": "3"
    },
    "706": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2064
      ],
      "op": "DUP9",
      "path": "3"
    },
    "707": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP9",
      "path": "3"
    },
    "708": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "CALL",
      "path": "3"
    },
    "709": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "710": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "POP",
      "path": "3"
    },
    "711": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "POP",
      "path": "3"
    },
    "712": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "POP",
      "path": "3"
    },
    "713": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "POP",
      "path": "3"
    },
    "714": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "715": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "716": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "717": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA"
    },
    "720": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "721": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "722": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "724": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "725": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "726": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "727": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "729": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "REVERT",
      "path": "3"
    },
    "730": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "731": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2045,
        2075
      ],
      "op": "POP",
      "path": "3"
    },
    "732": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2089,
        2113
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x2E3"
    },
    "735": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x320"
    },
    "738": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        2089,
        2113
      ],
      "op": "JUMP",
      "path": "3"
    },
    "739": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2089,
        2113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "740": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x0"
    },
    "742": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "743": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2158,
        2204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "745": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2158,
        2204
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "746": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "749": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "750": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "751": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "DIV",
      "path": "3"
    },
    "752": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "754": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2180,
        2203
      ],
      "op": "AND",
      "path": "3"
    },
    "755": {
      "op": "DUP2"
    },
    "756": {
      "op": "MSTORE"
    },
    "757": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2168,
        2178
      ],
      "op": "CALLER",
      "path": "3"
    },
    "758": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2168,
        2178
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "759": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2158,
        2204
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xE896CF8A3E0E72907DCA4B8C84E8D9CA30F10B4864551B42064D67B9E59822F9"
    },
    "792": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2158,
        2204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "795": {
      "op": "ADD"
    },
    "796": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2158,
        2204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x279"
    },
    "799": {
      "op": "JUMP"
    },
    "800": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1295,
        1779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "801": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1426,
        1436
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "802": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "804": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "805": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "806": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "807": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "809": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "811": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "812": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "814": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "815": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "816": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "817": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "819": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1405,
        1437
      ],
      "op": "AND",
      "path": "3"
    },
    "820": {
      "branch": 14,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1404,
        1437
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "821": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x385"
    },
    "824": {
      "branch": 14,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "825": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "827": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "DUP2",
      "path": "3"
    },
    "836": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "839": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "841": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "DUP3",
      "path": "3"
    },
    "842": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "ADD",
      "path": "3"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "848": {
      "op": "DUP3"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "op": "MSTORE"
    },
    "851": {
      "op": "PUSH32",
      "value": "0x4164647265737320416C7265616479204C6973746564203A2F00000000000000"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "893": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "895": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "896": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "DUP1",
      "path": "3"
    },
    "897": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "898": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "SUB",
      "path": "3"
    },
    "899": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "900": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "901": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1396,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "902": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "904": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "905": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "907": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "908": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "DUP3",
      "path": "3"
    },
    "909": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "AND",
      "path": "3"
    },
    "910": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1563,
        1586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "913": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1537,
        1560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "914": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1537,
        1560
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "915": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1537,
        1560
      ],
      "op": "DIV",
      "path": "3"
    },
    "916": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1537,
        1560
      ],
      "op": "AND",
      "path": "3"
    },
    "917": {
      "branch": 15,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1537,
        1586
      ],
      "op": "LT",
      "path": "3"
    },
    "918": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED"
    },
    "921": {
      "branch": 15,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "922": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "924": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "DUP2",
      "path": "3"
    },
    "933": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "936": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "938": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "939": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "ADD",
      "path": "3"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "945": {
      "op": "DUP3"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "MSTORE"
    },
    "948": {
      "op": "PUSH32",
      "value": "0x4D6178204E756D626572206F6620416464726573736573204163686965766564"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "PUSH3",
      "value": "0x40745"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xEB"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "995": {
      "op": "DUP3"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "1004": {
      "op": "JUMP"
    },
    "1005": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1529,
        1626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1006": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1692,
        1702
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 10
    },
    "1007": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1009": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1010": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1011": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1012": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1691
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1014": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1016": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1017": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1019": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1020": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1021": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1022": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1025": {
      "op": "NOT"
    },
    "1026": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "AND",
      "path": "3"
    },
    "1027": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1706,
        1710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1029": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1030": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1031": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "OR",
      "path": "3"
    },
    "1032": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1033": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1034": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1035": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 11
    },
    "1036": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1037": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1040": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1041": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DIV",
      "path": "3"
    },
    "1042": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1710
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1044": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "AND",
      "path": "3"
    },
    "1045": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1046": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1671,
        1703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1047": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41F"
    },
    "1050": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1051": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x576"
    },
    "1054": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "jump": "i",
      "offset": [
        1747,
        1772
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1055": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1056": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1057": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1058": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1061": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "EXP",
      "path": "3"
    },
    "1062": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1063": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1064": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1065": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1067": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "MUL",
      "path": "3"
    },
    "1068": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "NOT",
      "path": "3"
    },
    "1069": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "AND",
      "path": "3"
    },
    "1070": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1071": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1072": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1074": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "AND",
      "path": "3"
    },
    "1075": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "MUL",
      "path": "3"
    },
    "1076": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "OR",
      "path": "3"
    },
    "1077": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1078": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1079": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "POP",
      "path": "3"
    },
    "1080": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1747,
        1772
      ],
      "op": "POP",
      "path": "3"
    },
    "1081": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "jump": "o",
      "offset": [
        1295,
        1779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1082": {
      "op": "JUMPDEST"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "DUP5"
    },
    "1089": {
      "op": "SUB"
    },
    "1090": {
      "op": "SLT"
    },
    "1091": {
      "op": "ISZERO"
    },
    "1092": {
      "op": "PUSH2",
      "value": "0x44C"
    },
    "1095": {
      "op": "JUMPI"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "DUP1"
    },
    "1099": {
      "op": "REVERT"
    },
    "1100": {
      "op": "JUMPDEST"
    },
    "1101": {
      "op": "DUP2"
    },
    "1102": {
      "op": "CALLDATALOAD"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "SUB"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "AND"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "EQ"
    },
    "1115": {
      "op": "PUSH2",
      "value": "0x463"
    },
    "1118": {
      "op": "JUMPI"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "DUP1"
    },
    "1122": {
      "op": "REVERT"
    },
    "1123": {
      "op": "JUMPDEST"
    },
    "1124": {
      "op": "SWAP4"
    },
    "1125": {
      "op": "SWAP3"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "jump": "o",
      "op": "JUMP"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1136": {
      "op": "DUP4"
    },
    "1137": {
      "op": "DUP6"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "op": "SLT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "REVERT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "CALLDATALOAD"
    },
    "1152": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1161": {
      "op": "DUP1"
    },
    "1162": {
      "op": "DUP3"
    },
    "1163": {
      "op": "GT"
    },
    "1164": {
      "op": "ISZERO"
    },
    "1165": {
      "op": "PUSH2",
      "value": "0x495"
    },
    "1168": {
      "op": "JUMPI"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1171": {
      "op": "DUP1"
    },
    "1172": {
      "op": "REVERT"
    },
    "1173": {
      "op": "JUMPDEST"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "DUP6"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SWAP2"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "DUP6"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1182": {
      "op": "DUP4"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "SLT"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1188": {
      "op": "JUMPI"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1191": {
      "op": "DUP1"
    },
    "1192": {
      "op": "REVERT"
    },
    "1193": {
      "op": "JUMPDEST"
    },
    "1194": {
      "op": "DUP2"
    },
    "1195": {
      "op": "CALLDATALOAD"
    },
    "1196": {
      "op": "DUP2"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "GT"
    },
    "1199": {
      "op": "ISZERO"
    },
    "1200": {
      "op": "PUSH2",
      "value": "0x4B8"
    },
    "1203": {
      "op": "JUMPI"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "REVERT"
    },
    "1208": {
      "op": "JUMPDEST"
    },
    "1209": {
      "op": "DUP7"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "DUP6"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "GT"
    },
    "1217": {
      "op": "ISZERO"
    },
    "1218": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "1221": {
      "op": "JUMPI"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1224": {
      "op": "DUP1"
    },
    "1225": {
      "op": "REVERT"
    },
    "1226": {
      "op": "JUMPDEST"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "op": "SWAP3"
    },
    "1230": {
      "op": "SWAP1"
    },
    "1231": {
      "op": "SWAP3"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "SWAP7"
    },
    "1234": {
      "op": "SWAP2"
    },
    "1235": {
      "op": "SWAP6"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "SWAP1"
    },
    "1238": {
      "op": "SWAP4"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "jump": "o",
      "op": "JUMP"
    },
    "1244": {
      "op": "JUMPDEST"
    },
    "1245": {
      "op": "DUP3"
    },
    "1246": {
      "op": "ISZERO"
    },
    "1247": {
      "op": "ISZERO"
    },
    "1248": {
      "op": "DUP2"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "DUP5"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "op": "DUP4"
    },
    "1261": {
      "op": "MLOAD"
    },
    "1262": {
      "op": "DUP1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1265": {
      "op": "DUP6"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "DUP2"
    },
    "1273": {
      "op": "LT"
    },
    "1274": {
      "op": "ISZERO"
    },
    "1275": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1278": {
      "op": "JUMPI"
    },
    "1279": {
      "op": "DUP6"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "DUP4"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "MLOAD"
    },
    "1285": {
      "op": "DUP6"
    },
    "1286": {
      "op": "DUP3"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "MSTORE"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1297": {
      "op": "JUMP"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "DUP7"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1313": {
      "op": "NOT"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1316": {
      "op": "DUP4"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "AND"
    },
    "1319": {
      "op": "DUP6"
    },
    "1320": {
      "op": "ADD"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "op": "SWAP3"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "SWAP4"
    },
    "1327": {
      "op": "SWAP3"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "jump": "o",
      "op": "JUMP"
    },
    "1332": {
      "op": "JUMPDEST"
    },
    "1333": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1353": {
      "op": "REVERT"
    },
    "1354": {
      "op": "JUMPDEST"
    },
    "1355": {
      "op": "DUP2"
    },
    "1356": {
      "op": "DUP2"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "op": "DUP2"
    },
    "1359": {
      "op": "DUP2"
    },
    "1360": {
      "op": "GT"
    },
    "1361": {
      "op": "ISZERO"
    },
    "1362": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1365": {
      "op": "JUMPI"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1372": {
      "jump": "i",
      "op": "JUMP"
    },
    "1373": {
      "op": "JUMPDEST"
    },
    "1374": {
      "op": "SWAP3"
    },
    "1375": {
      "op": "SWAP2"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "jump": "o",
      "op": "JUMP"
    },
    "1379": {
      "op": "JUMPDEST"
    },
    "1380": {
      "op": "DUP1"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "DUP1"
    },
    "1384": {
      "op": "DUP3"
    },
    "1385": {
      "op": "GT"
    },
    "1386": {
      "op": "ISZERO"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1394": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1397": {
      "jump": "i",
      "op": "JUMP"
    },
    "1398": {
      "op": "JUMPDEST"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1403": {
      "op": "DUP3"
    },
    "1404": {
      "op": "AND"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1407": {
      "op": "DUP2"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1412": {
      "op": "JUMPI"
    },
    "1413": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1416": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1419": {
      "jump": "i",
      "op": "JUMP"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "SWAP3"
    },
    "1425": {
      "op": "SWAP2"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "73e8d20f11238f61cee6b86695e2b0709a93aeda",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// imports\nimport \"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\";\n\ncontract Whitelist is KeeperCompatibleInterface{\n    // Address to receive payments after time or account limit exceeds\n    address payable public immutable feeAccount;\n\n    // Max number of addresses\n    uint8 public maxWhitelistedAddresses;\n\n    // Counter of actual number of listed addresses\n    uint8 public numAddressesWhitelisted;\n\n    // Amount fee to enter whitelist\n    uint256 public feeAmount;\n    // variable to store deploy date\n    uint lastTimeStamp;\n    uint interval;\n\n    // Mapping to keep track of saved addresses\n    mapping(address => bool) public whitelistedAddresses;\n\n    // event to notify a new address is submitted\n    event Added(address indexed _user, uint8 _numAddressesWhitelisted);\n    event PaidAdded(address indexed _user, uint8 _numAddressesWhitelisted);\n\n    //  Constructor, set max number of adrs\n    constructor(uint8 _maxWhitelistedAddresses, uint256 _feeAmount, uint _interval){\n        maxWhitelistedAddresses = _maxWhitelistedAddresses;\n        feeAmount=_feeAmount;\n        lastTimeStamp=block.timestamp;\n        feeAccount=payable(msg.sender);\n        interval=_interval;\n    }\n\n    // function to add address free\n    function _AddAddressToWhitelist() internal{\n        // require address is not already listed\n        require(!whitelistedAddresses[msg.sender], \"Address Already Listed :/\");\n\n        // require max number of adrs not achieved\n        require(numAddressesWhitelisted < maxWhitelistedAddresses, \"Max Number of Addresses Achieved :(\");\n\n        // add address to mapping\n        whitelistedAddresses[msg.sender] = true;\n\n        // update counter\n        numAddressesWhitelisted++;\n    }\n\n    // Function to add address\n    function addAddressToWhitelist() public payable{\n        if(feeAmount == 0){\n            _AddAddressToWhitelist();\n            // emit event\n            emit Added(msg.sender, numAddressesWhitelisted);\n        }else{\n            feeAccount.transfer(feeAmount);\n            _AddAddressToWhitelist();\n            // emit event\n            emit PaidAdded(msg.sender, numAddressesWhitelisted);\n        }\n    }\n\n    function checkUpkeep(bytes calldata /* checkData */) external override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        // check if enough time have passed to update price\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n    }\n    \n    function performUpkeep(bytes calldata /* performData */) external override {\n        //We highly recommend revalidating the upkeep in the performUpkeep function\n        if ((block.timestamp - lastTimeStamp) > interval ) {\n            lastTimeStamp = block.timestamp;\n            // increase fee price to register\n            feeAmount = feeAmount + (2 ether);\n        }\n    }\n}",
  "sourceMap": "129:2752:3:-:0;;;970:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1059:23;:50;;-1:-1:-1;;1059:50:3;;;;;;;;;;;;;-1:-1:-1;1119:20:3;1163:15;1149:13;:29;1207:10;1188:30;;1228:8;:18;129:2752;;14:395:4;100:6;108;116;169:2;157:9;148:7;144:23;140:32;137:52;;;185:1;182;175:12;137:52;217:9;211:16;267:4;260:5;256:16;249:5;246:27;236:55;;287:1;284;277:12;236:55;355:2;340:18;;334:25;399:2;384:18;;;378:25;310:5;;334:25;;-1:-1:-1;378:25:4;14:395;-1:-1:-1;;;14:395:4:o;:::-;129:2752:3;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Whitelist.sol",
  "type": "contract"
}