{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxWhitelistedAddresses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_numAddressesWhitelisted",
          "type": "uint256"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_numAddressesWhitelisted",
          "type": "uint256"
        }
      ],
      "name": "PaidAdded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAccount",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWhitelistedAddresses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAddressesWhitelisted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "/Users/blackshuck/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "3": "contracts/Whitelist.sol"
  },
  "ast": {
    "absolutePath": "contracts/Whitelist.sol",
    "exportedSymbols": {
      "KeeperBase": [
        220
      ],
      "KeeperCompatible": [
        190
      ],
      "KeeperCompatibleInterface": [
        239
      ],
      "Whitelist": [
        181
      ]
    },
    "id": 182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:3"
      },
      {
        "absolutePath": "/Users/blackshuck/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/KeeperCompatible.sol",
        "file": "@chainlink/contracts/src/v0.8/KeeperCompatible.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 191,
        "src": "67:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "KeeperCompatibleInterface",
              "nameLocations": [
                "151:25:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 239,
              "src": "151:25:3"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "151:25:3"
          }
        ],
        "canonicalName": "Whitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 181,
        "linearizedBaseContracts": [
          181,
          239
        ],
        "name": "Whitelist",
        "nameLocation": "138:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65e17c9d",
            "id": 6,
            "mutability": "immutable",
            "name": "feeAccount",
            "nameLocation": "286:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "253:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "253:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31a72188",
            "id": 8,
            "mutability": "mutable",
            "name": "maxWhitelistedAddresses",
            "nameLocation": "349:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "334:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4011d7cd",
            "id": 10,
            "mutability": "mutable",
            "name": "numAddressesWhitelisted",
            "nameLocation": "446:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "431:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "431:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69e15404",
            "id": 12,
            "mutability": "mutable",
            "name": "feeAmount",
            "nameLocation": "528:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "513:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "590:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "585:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "585:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "interval",
            "nameLocation": "614:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "609:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "609:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06c933d8",
            "id": 20,
            "mutability": "mutable",
            "name": "whitelistedAddresses",
            "nameLocation": "709:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "677:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "685:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "677:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "696:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "446e00ad56f9b887844f390c87a128507b991ea0499375f13ecb115288c2df7d",
            "id": 26,
            "name": "Added",
            "nameLocation": "792:5:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "814:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "798:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numAddressesWhitelisted",
                  "nameLocation": "829:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "821:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:57:3"
            },
            "src": "786:69:3"
          },
          {
            "anonymous": false,
            "eventSelector": "2fa305869f2dd2cd92be4e2c350ba91aa98743277a62daee658fe8788cf09807",
            "id": 32,
            "name": "PaidAdded",
            "nameLocation": "866:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "892:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "876:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numAddressesWhitelisted",
                  "nameLocation": "907:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "899:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:57:3"
            },
            "src": "860:73:3"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "1064:204:3",
              "statements": [
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "maxWhitelistedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1074:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42,
                      "name": "_maxWhitelistedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1100:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1074:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:50:3"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1134:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46,
                      "name": "_feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1144:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1134:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:20:3"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1164:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1178:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1184:9:3",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1178:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1164:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:29:3"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "feeAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1203:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1222:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1226:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1222:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1214:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1214:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1214:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1203:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:30:3"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1243:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1252:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1243:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:18:3"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_maxWhitelistedAddresses",
                  "nameLocation": "1003:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "995:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_feeAmount",
                  "nameLocation": "1037:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1029:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_interval",
                  "nameLocation": "1054:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1049:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:70:3"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:3"
            },
            "scope": 181,
            "src": "983:285:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1352:442:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1419:33:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 71,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1420:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "expression": {
                              "id": 72,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1441:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1445:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1441:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1420:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320416c7265616479204c6973746564203a2f",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e9a4cd211cc2e9cb461039637f426d12ba86751da2563e1b17f8d08d4f696b1",
                          "typeString": "literal_string \"Address Already Listed :/\""
                        },
                        "value": "Address Already Listed :/"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e9a4cd211cc2e9cb461039637f426d12ba86751da2563e1b17f8d08d4f696b1",
                          "typeString": "literal_string \"Address Already Listed :/\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1411:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80,
                          "name": "numAddressesWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1552:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 81,
                          "name": "maxWhitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1578:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1552:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178204e756d626572206f6620416464726573736573204163686965766564203a28",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1603:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b06f36ed6cbfef78c704ea3d73fa10dc39b3646b79354f88a0200554d81b8c16",
                          "typeString": "literal_string \"Max Number of Addresses Achieved :(\""
                        },
                        "value": "Max Number of Addresses Achieved :("
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b06f36ed6cbfef78c704ea3d73fa10dc39b3646b79354f88a0200554d81b8c16",
                          "typeString": "literal_string \"Max Number of Addresses Achieved :(\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1544:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:97:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:97:3"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1686:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1707:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1711:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1707:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1686:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1721:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1686:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:39:3"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1762:25:3",
                    "subExpression": {
                      "id": 93,
                      "name": "numAddressesWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1762:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:25:3"
                }
              ]
            },
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_AddAddressToWhitelist",
            "nameLocation": "1319:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:2:3"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:0:3"
            },
            "scope": 181,
            "src": "1310:484:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1878:358:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1891:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1904:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1891:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "2046:184:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 116,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2080:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 113,
                              "name": "feeAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "2060:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2071:8:3",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2060:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "2060:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 119,
                            "name": "_AddAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2104:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "2104:24:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2183:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2187:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2183:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 125,
                              "name": "numAddressesWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2195:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 122,
                            "name": "PaidAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2173:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2173:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "EmitStatement",
                        "src": "2168:51:3"
                      }
                    ]
                  },
                  "id": 129,
                  "nodeType": "IfStatement",
                  "src": "1888:342:3",
                  "trueBody": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "1906:136:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 103,
                            "name": "_AddAddressToWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1920:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1920:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1920:24:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 107,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1995:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1999:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1995:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 109,
                              "name": "numAddressesWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2007:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 106,
                            "name": "Added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1989:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1989:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "EmitStatement",
                        "src": "1984:47:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8e7314d9",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAddressToWhitelist",
            "nameLocation": "1840:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:2:3"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1878:0:3"
            },
            "scope": 181,
            "src": "1831:405:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              232
            ],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2373:136:3",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 141,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2443:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 142,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2459:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2465:9:3",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2459:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 144,
                              "name": "lastTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2477:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2459:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 146,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2458:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 147,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2494:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2458:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2443:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2443:59:3"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "2251:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2304:8:3"
            },
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2263:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2262:32:3"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "2327:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2322:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2341:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:51:3"
            },
            "scope": 181,
            "src": "2242:267:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              238
            ],
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "2594:300:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 158,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2693:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2699:9:3",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2693:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 160,
                            "name": "lastTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2711:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2693:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2692:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 163,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2728:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2692:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "IfStatement",
                  "src": "2688:200:3",
                  "trueBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "2739:149:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 165,
                            "name": "lastTimeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2753:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 166,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2769:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2775:9:3",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2769:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2753:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2753:31:3"
                      },
                      {
                        "expression": {
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 170,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2844:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 171,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2856:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "32",
                                  "id": 172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2869:7:3",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2"
                                }
                              ],
                              "id": 173,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2868:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000"
                              }
                            },
                            "src": "2856:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2844:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "2844:33:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "2528:13:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2585:8:3"
            },
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "2542:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:34:3"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:3"
            },
            "scope": 181,
            "src": "2519:375:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 182,
        "src": "129:2767:3",
        "usedErrors": []
      }
    ],
    "src": "31:2865:3"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161060838038061060883398101604081905261002f91610048565b6000929092556002554260035533608052600455610076565b60008060006060848603121561005d57600080fd5b8351925060208401519150604084015190509250925092565b60805161057061009860003960008181610133015261026c01526105706000f3fe60806040526004361061007b5760003560e01c806365e17c9d1161004e57806365e17c9d1461012157806369e154041461016d5780636e04ff0d146101835780638e7314d9146101b157600080fd5b806306c933d81461008057806331a72188146100c55780634011d7cd146100e95780634585e33b146100ff575b600080fd5b34801561008c57600080fd5b506100b061009b3660046103e5565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100d157600080fd5b506100db60005481565b6040519081526020016100bc565b3480156100f557600080fd5b506100db60015481565b34801561010b57600080fd5b5061011f61011a366004610415565b6101b9565b005b34801561012d57600080fd5b506101557f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b34801561017957600080fd5b506100db60025481565b34801561018f57600080fd5b506101a361019e366004610415565b6101f0565b6040516100bc929190610487565b61011f61020f565b6004546003546101c990426104f5565b11156101ec57426003556002546101e890671bc16d674ec8000061050e565b6002555b5050565b600060606004546003544261020591906104f5565b1191509250929050565b60025460000361025c576102216102f1565b60015460405190815233907f446e00ad56f9b887844f390c87a128507b991ea0499375f13ecb115288c2df7d906020015b60405180910390a2565b6002546040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169180156108fc02916000818181858888f193505050501580156102b3573d6000803e3d6000fd5b506102bc6102f1565b60015460405190815233907f2fa305869f2dd2cd92be4e2c350ba91aa98743277a62daee658fe8788cf0980790602001610252565b3360009081526005602052604090205460ff16156103565760405162461bcd60e51b815260206004820152601960248201527f4164647265737320416c7265616479204c6973746564203a2f0000000000000060448201526064015b60405180910390fd5b600054600154106103b55760405162461bcd60e51b815260206004820152602360248201527f4d6178204e756d626572206f662041646472657373657320416368696576656460448201526204074560eb1b606482015260840161034d565b336000908152600560205260408120805460ff191660019081179091558054916103de83610521565b9190505550565b6000602082840312156103f757600080fd5b81356001600160a01b038116811461040e57600080fd5b9392505050565b6000806020838503121561042857600080fd5b823567ffffffffffffffff8082111561044057600080fd5b818501915085601f83011261045457600080fd5b81358181111561046357600080fd5b86602082850101111561047557600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b818110156104bd578581018301518582016060015282016104a1565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610508576105086104df565b92915050565b80820180821115610508576105086104df565b600060018201610533576105336104df565b506001019056fea2646970667358221220c9f384eeadcd1dbc1316b0a99b8f9835c2f84d1fe1f35dc1dd2529afd03d3ea364736f6c63430008110033",
  "bytecodeSha1": "d95490054a548d5d9772ecf57ab9807fa12433c7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Whitelist",
  "coverageMap": {
    "branches": {
      "2": {},
      "3": {
        "Whitelist._AddAddressToWhitelist": {
          "14": [
            1419,
            1452,
            true
          ],
          "15": [
            1552,
            1601,
            true
          ]
        },
        "Whitelist.addAddressToWhitelist": {
          "13": [
            1891,
            1905,
            false
          ]
        },
        "Whitelist.performUpkeep": {
          "12": [
            2692,
            2736,
            false
          ]
        }
      }
    },
    "statements": {
      "2": {},
      "3": {
        "Whitelist._AddAddressToWhitelist": {
          "8": [
            1411,
            1482
          ],
          "9": [
            1544,
            1641
          ],
          "10": [
            1686,
            1725
          ],
          "11": [
            1762,
            1787
          ]
        },
        "Whitelist.addAddressToWhitelist": {
          "3": [
            1920,
            1944
          ],
          "4": [
            1984,
            2031
          ],
          "5": [
            2060,
            2090
          ],
          "6": [
            2104,
            2128
          ],
          "7": [
            2168,
            2219
          ]
        },
        "Whitelist.checkUpkeep": {
          "2": [
            2443,
            2502
          ]
        },
        "Whitelist.performUpkeep": {
          "0": [
            2753,
            2784
          ],
          "1": [
            2844,
            2877
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/KeeperCompatibleInterface"
  ],
  "deployedBytecode": "60806040526004361061007b5760003560e01c806365e17c9d1161004e57806365e17c9d1461012157806369e154041461016d5780636e04ff0d146101835780638e7314d9146101b157600080fd5b806306c933d81461008057806331a72188146100c55780634011d7cd146100e95780634585e33b146100ff575b600080fd5b34801561008c57600080fd5b506100b061009b3660046103e5565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100d157600080fd5b506100db60005481565b6040519081526020016100bc565b3480156100f557600080fd5b506100db60015481565b34801561010b57600080fd5b5061011f61011a366004610415565b6101b9565b005b34801561012d57600080fd5b506101557f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b34801561017957600080fd5b506100db60025481565b34801561018f57600080fd5b506101a361019e366004610415565b6101f0565b6040516100bc929190610487565b61011f61020f565b6004546003546101c990426104f5565b11156101ec57426003556002546101e890671bc16d674ec8000061050e565b6002555b5050565b600060606004546003544261020591906104f5565b1191509250929050565b60025460000361025c576102216102f1565b60015460405190815233907f446e00ad56f9b887844f390c87a128507b991ea0499375f13ecb115288c2df7d906020015b60405180910390a2565b6002546040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169180156108fc02916000818181858888f193505050501580156102b3573d6000803e3d6000fd5b506102bc6102f1565b60015460405190815233907f2fa305869f2dd2cd92be4e2c350ba91aa98743277a62daee658fe8788cf0980790602001610252565b3360009081526005602052604090205460ff16156103565760405162461bcd60e51b815260206004820152601960248201527f4164647265737320416c7265616479204c6973746564203a2f0000000000000060448201526064015b60405180910390fd5b600054600154106103b55760405162461bcd60e51b815260206004820152602360248201527f4d6178204e756d626572206f662041646472657373657320416368696576656460448201526204074560eb1b606482015260840161034d565b336000908152600560205260408120805460ff191660019081179091558054916103de83610521565b9190505550565b6000602082840312156103f757600080fd5b81356001600160a01b038116811461040e57600080fd5b9392505050565b6000806020838503121561042857600080fd5b823567ffffffffffffffff8082111561044057600080fd5b818501915085601f83011261045457600080fd5b81358181111561046357600080fd5b86602082850101111561047557600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b818110156104bd578581018301518582016060015282016104a1565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610508576105086104df565b92915050565b80820180821115610508576105086104df565b600060018201610533576105336104df565b506001019056fea2646970667358221220c9f384eeadcd1dbc1316b0a99b8f9835c2f84d1fe1f35dc1dd2529afd03d3ea364736f6c63430008110033",
  "deployedSourceMap": "129:2767:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:52;;;;;;;;;;-1:-1:-1;677:52:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;470:14:4;;463:22;445:41;;433:2;418:18;677:52:3;;;;;;;;334:38;;;;;;;;;;;;;;;;;;;643:25:4;;;631:2;616:18;334:38:3;497:177:4;431:38:3;;;;;;;;;;;;;;;;2519:375;;;;;;;;;;-1:-1:-1;2519:375:3;;;;;:::i;:::-;;:::i;:::-;;253:43;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1455:32:4;;;1437:51;;1425:2;1410:18;253:43:3;1275:219:4;513:24:3;;;;;;;;;;;;;;;;2242:267;;;;;;;;;;-1:-1:-1;2242:267:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1831:405::-;;;:::i;2519:375::-;2728:8;;2711:13;;2693:31;;:15;:31;:::i;:::-;2692:44;2688:200;;;2769:15;2753:13;:31;2856:9;;:21;;2869:7;2856:21;:::i;:::-;2844:9;:33;2688:200;2519:375;;:::o;2242:267::-;2322:17;2341:12;2494:8;;2477:13;;2459:15;:31;;;;:::i;:::-;2458:44;2443:59;;2242:267;;;;;:::o;1831:405::-;1891:9;;1904:1;1891:14;1888:342;;1920:24;:22;:24::i;:::-;2007:23;;1989:42;;643:25:4;;;1995:10:3;;1989:42;;631:2:4;616:18;1989:42:3;;;;;;;;1831:405::o;1888:342::-;2080:9;;2060:30;;-1:-1:-1;;;;;2060:10:3;:19;;:30;;;;;;;;;2080:9;2060:19;:30;;;;;;;;;;;;;;;;;;;;;2104:24;:22;:24::i;:::-;2195:23;;2173:46;;643:25:4;;;2183:10:3;;2173:46;;631:2:4;616:18;2173:46:3;497:177:4;1310:484:3;1441:10;1420:32;;;;:20;:32;;;;;;;;1419:33;1411:71;;;;-1:-1:-1;;;1411:71:3;;2728:2:4;1411:71:3;;;2710:21:4;2767:2;2747:18;;;2740:30;2806:27;2786:18;;;2779:55;2851:18;;1411:71:3;;;;;;;;;1578:23;;1552;;:49;1544:97;;;;-1:-1:-1;;;1544:97:3;;3082:2:4;1544:97:3;;;3064:21:4;3121:2;3101:18;;;3094:30;3160:34;3140:18;;;3133:62;-1:-1:-1;;;3211:18:4;;;3204:33;3254:19;;1544:97:3;2880:399:4;1544:97:3;1707:10;1686:32;;;;:20;:32;;;;;:39;;-1:-1:-1;;1686:39:3;1721:4;1686:39;;;;;;1762:25;;;;;;:::i;:::-;;;;;;1310:484::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;679:591::-;749:6;757;810:2;798:9;789:7;785:23;781:32;778:52;;;826:1;823;816:12;778:52;866:9;853:23;895:18;936:2;928:6;925:14;922:34;;;952:1;949;942:12;922:34;990:6;979:9;975:22;965:32;;1035:7;1028:4;1024:2;1020:13;1016:27;1006:55;;1057:1;1054;1047:12;1006:55;1097:2;1084:16;1123:2;1115:6;1112:14;1109:34;;;1139:1;1136;1129:12;1109:34;1184:7;1179:2;1170:6;1166:2;1162:15;1158:24;1155:37;1152:57;;;1205:1;1202;1195:12;1152:57;1236:2;1228:11;;;;;1258:6;;-1:-1:-1;679:591:4;;-1:-1:-1;;;;679:591:4:o;1499:627::-;1682:6;1675:14;1668:22;1657:9;1650:41;1631:4;1710:2;1748;1743;1732:9;1728:18;1721:30;1780:6;1774:13;1823:6;1818:2;1807:9;1803:18;1796:34;1848:1;1858:140;1872:6;1869:1;1866:13;1858:140;;;1967:14;;;1963:23;;1957:30;1933:17;;;1952:2;1929:26;1922:66;1887:10;;1858:140;;;1862:3;2047:1;2042:2;2033:6;2022:9;2018:22;2014:31;2007:42;2117:2;2110;2106:7;2101:2;2093:6;2089:15;2085:29;2074:9;2070:45;2066:54;2058:62;;;;1499:627;;;;;:::o;2131:127::-;2192:10;2187:3;2183:20;2180:1;2173:31;2223:4;2220:1;2213:15;2247:4;2244:1;2237:15;2263:128;2330:9;;;2351:11;;;2348:37;;;2365:18;;:::i;:::-;2263:128;;;;:::o;2396:125::-;2461:9;;;2482:10;;;2479:36;;;2495:18;;:::i;3284:135::-;3323:3;3344:17;;;3341:43;;3364:18;;:::i;:::-;-1:-1:-1;3411:1:4;3400:13;;3284:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    129,
    2896
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65E17C9D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x65E17C9D EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x69E15404 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8E7314D9 EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C933D8 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x31A72188 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x4011D7CD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP3 SWAP2 SWAP1 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1C9 SWAP1 TIMESTAMP PUSH2 0x4F5 JUMP JUMPDEST GT ISZERO PUSH2 0x1EC JUMPI TIMESTAMP PUSH1 0x3 SSTORE PUSH1 0x2 SLOAD PUSH2 0x1E8 SWAP1 PUSH8 0x1BC16D674EC80000 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x2 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST GT SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SUB PUSH2 0x25C JUMPI PUSH2 0x221 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x446E00AD56F9B887844F390C87A128507B991EA0499375F13ECB115288C2DF7D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2BC PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2FA305869F2DD2CD92BE4E2C350BA91AA98743277A62DAEE658FE8788CF09807 SWAP1 PUSH1 0x20 ADD PUSH2 0x252 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320416C7265616479204C6973746564203A2F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD LT PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E756D626572206F6620416464726573736573204163686965766564 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x40745 PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x3DE DUP4 PUSH2 0x521 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4BD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x4A1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0x4DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x4DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 RETURN DUP5 0xEE 0xAD 0xCD SAR 0xBC SGT AND 0xB0 0xA9 SWAP12 DUP16 SWAP9 CALLDATALOAD 0xC2 0xF8 0x4D 0x1F 0xE1 RETURN 0x5D 0xC1 0xDD 0x25 0x29 0xAF 0xD0 RETURNDATASIZE RETURNDATACOPY LOG3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B"
    },
    "12": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x65E17C9D"
    },
    "25": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x65E17C9D"
    },
    "36": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "40": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x69E15404"
    },
    "47": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D"
    },
    "51": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6E04FF0D"
    },
    "58": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x183"
    },
    "62": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8E7314D9"
    },
    "69": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B1"
    },
    "73": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "REVERT",
      "path": "3"
    },
    "78": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "79": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6C933D8"
    },
    "85": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80"
    },
    "89": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x31A72188"
    },
    "96": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5"
    },
    "100": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4011D7CD"
    },
    "107": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9"
    },
    "111": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4585E33B"
    },
    "118": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF"
    },
    "122": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "126": {
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "127": {
      "first_revert": true,
      "fn": null,
      "offset": [
        129,
        2896
      ],
      "op": "REVERT",
      "path": "3"
    },
    "128": {
      "offset": [
        677,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "129": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "DUP1",
      "path": "3"
    },
    "131": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "135": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "offset": [
        677,
        729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0"
    },
    "145": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B"
    },
    "148": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "149": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "151": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E5"
    },
    "154": {
      "fn": null,
      "jump": "i",
      "offset": [
        677,
        729
      ],
      "op": "JUMP",
      "path": "3"
    },
    "155": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "158": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "160": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "163": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "166": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "168": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "171": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "173": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "AND",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "JUMP",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "179": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "180": {
      "op": "SWAP1"
    },
    "181": {
      "op": "ISZERO"
    },
    "182": {
      "op": "ISZERO"
    },
    "183": {
      "op": "DUP2"
    },
    "184": {
      "op": "MSTORE"
    },
    "185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "187": {
      "op": "ADD"
    },
    "188": {
      "offset": [
        677,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "189": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "191": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "DUP1",
      "path": "3"
    },
    "193": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SUB",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        677,
        729
      ],
      "op": "RETURN",
      "path": "3"
    },
    "197": {
      "offset": [
        334,
        372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "198": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "199": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1"
    },
    "204": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "REVERT",
      "path": "3"
    },
    "209": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "POP",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB"
    },
    "214": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "216": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "220": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "222": {
      "fn": null,
      "offset": [
        334,
        372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "DUP2"
    },
    "225": {
      "op": "MSTORE"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "228": {
      "op": "ADD"
    },
    "229": {
      "offset": [
        334,
        372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "232": {
      "op": "JUMP"
    },
    "233": {
      "offset": [
        431,
        469
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "236": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "237": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5"
    },
    "240": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "243": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "244": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "REVERT",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "POP",
      "path": "3"
    },
    "247": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB"
    },
    "250": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "252": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "253": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "DUP2",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        431,
        469
      ],
      "op": "JUMP",
      "path": "3"
    },
    "255": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "256": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "257": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "DUP1",
      "path": "3"
    },
    "258": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "259": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B"
    },
    "262": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "263": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "265": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "DUP1",
      "path": "3"
    },
    "266": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "REVERT",
      "path": "3"
    },
    "267": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "268": {
      "op": "POP"
    },
    "269": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "272": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A"
    },
    "275": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "276": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "278": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x415"
    },
    "281": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMP",
      "path": "3"
    },
    "282": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "283": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B9"
    },
    "286": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "STOP",
      "path": "3"
    },
    "289": {
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "290": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "291": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "292": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "293": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12D"
    },
    "296": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "297": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "299": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "300": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "REVERT",
      "path": "3"
    },
    "301": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "302": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "POP",
      "path": "3"
    },
    "303": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155"
    },
    "306": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "339": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "340": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "341": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "342": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "344": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        253,
        296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "351": {
      "op": "SHL"
    },
    "352": {
      "op": "SUB"
    },
    "353": {
      "op": "SWAP1"
    },
    "354": {
      "op": "SWAP2"
    },
    "355": {
      "op": "AND"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "offset": [
        253,
        296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "364": {
      "op": "JUMP"
    },
    "365": {
      "offset": [
        513,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "366": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "367": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "DUP1",
      "path": "3"
    },
    "368": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "369": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179"
    },
    "372": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "373": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "375": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "DUP1",
      "path": "3"
    },
    "376": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "REVERT",
      "path": "3"
    },
    "377": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "378": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "POP",
      "path": "3"
    },
    "379": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB"
    },
    "382": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "384": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "385": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "386": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        513,
        537
      ],
      "op": "JUMP",
      "path": "3"
    },
    "387": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "388": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "389": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "DUP1",
      "path": "3"
    },
    "390": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "391": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18F"
    },
    "394": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "395": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "397": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "DUP1",
      "path": "3"
    },
    "398": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "REVERT",
      "path": "3"
    },
    "399": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A3"
    },
    "404": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19E"
    },
    "407": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "408": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "410": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x415"
    },
    "413": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "414": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "415": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0"
    },
    "418": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "419": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "420": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "422": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "423": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "426": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "427": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "428": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "429": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "432": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "433": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1831,
        2236
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "434": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1831,
        2236
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "437": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1831,
        2236
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "440": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        1831,
        2236
      ],
      "op": "JUMP",
      "path": "3"
    },
    "441": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "442": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2728,
        2736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "444": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2728,
        2736
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "445": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2711,
        2724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "447": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2711,
        2724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "448": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2693,
        2724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C9"
    },
    "451": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2693,
        2724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "452": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2693,
        2708
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "453": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2693,
        2724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F5"
    },
    "456": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2693,
        2724
      ],
      "op": "JUMP",
      "path": "3"
    },
    "457": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2693,
        2724
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "458": {
      "branch": 12,
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2692,
        2736
      ],
      "op": "GT",
      "path": "3"
    },
    "459": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2688,
        2888
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "460": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2688,
        2888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC"
    },
    "463": {
      "branch": 12,
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2688,
        2888
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "464": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2769,
        2784
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 0
    },
    "465": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2753,
        2766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "467": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2753,
        2784
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "468": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2865
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x2"
    },
    "470": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2865
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "471": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E8"
    },
    "474": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2877
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "475": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2869,
        2876
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0x1BC16D674EC80000"
    },
    "484": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50E"
    },
    "487": {
      "fn": "Whitelist.performUpkeep",
      "jump": "i",
      "offset": [
        2856,
        2877
      ],
      "op": "JUMP",
      "path": "3"
    },
    "488": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2856,
        2877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "489": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2844,
        2853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "491": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2844,
        2877
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "492": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2688,
        2888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "493": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "POP",
      "path": "3"
    },
    "494": {
      "fn": "Whitelist.performUpkeep",
      "offset": [
        2519,
        2894
      ],
      "op": "POP",
      "path": "3"
    },
    "495": {
      "fn": "Whitelist.performUpkeep",
      "jump": "o",
      "offset": [
        2519,
        2894
      ],
      "op": "JUMP",
      "path": "3"
    },
    "496": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "497": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2322,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "499": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2341,
        2353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "501": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2494,
        2502
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x4"
    },
    "503": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2494,
        2502
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "504": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2477,
        2490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "506": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2477,
        2490
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "507": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2474
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "508": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x205"
    },
    "511": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2490
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "512": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "513": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F5"
    },
    "516": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "i",
      "offset": [
        2459,
        2490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "517": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2459,
        2490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "518": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2458,
        2502
      ],
      "op": "GT",
      "path": "3"
    },
    "519": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2443,
        2502
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "520": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2443,
        2502
      ],
      "op": "POP",
      "path": "3"
    },
    "521": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "522": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "523": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "524": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "525": {
      "fn": "Whitelist.checkUpkeep",
      "offset": [
        2242,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "526": {
      "fn": "Whitelist.checkUpkeep",
      "jump": "o",
      "offset": [
        2242,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "527": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1831,
        2236
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1891,
        1900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "530": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1891,
        1900
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "531": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1904,
        1905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "533": {
      "branch": 13,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1891,
        1905
      ],
      "op": "SUB",
      "path": "3"
    },
    "534": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1888,
        2230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C"
    },
    "537": {
      "branch": 13,
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1888,
        2230
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "538": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1920,
        1944
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x221"
    },
    "541": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1920,
        1942
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F1"
    },
    "544": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        1920,
        1944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "545": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1920,
        1944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "546": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2007,
        2030
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x1"
    },
    "548": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2007,
        2030
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "549": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "551": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "552": {
      "op": "SWAP1"
    },
    "553": {
      "op": "DUP2"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1995,
        2005
      ],
      "op": "CALLER",
      "path": "3"
    },
    "556": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1995,
        2005
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "557": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x446E00AD56F9B887844F390C87A128507B991EA0499375F13ECB115288C2DF7D"
    },
    "590": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "595": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "597": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "598": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "DUP1",
      "path": "3"
    },
    "599": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "600": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "SUB",
      "path": "3"
    },
    "601": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "602": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1989,
        2031
      ],
      "op": "LOG2",
      "path": "3"
    },
    "603": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "o",
      "offset": [
        1831,
        2236
      ],
      "op": "JUMP",
      "path": "3"
    },
    "604": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        1888,
        2230
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "605": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2080,
        2089
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x2"
    },
    "607": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2080,
        2089
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "608": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "610": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "op": "SUB"
    },
    "619": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2070
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "652": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2079
      ],
      "op": "AND",
      "path": "3"
    },
    "653": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2079
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "654": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP1",
      "path": "3"
    },
    "655": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "656": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "659": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "MUL",
      "path": "3"
    },
    "660": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "661": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "663": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP2",
      "path": "3"
    },
    "664": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP2",
      "path": "3"
    },
    "665": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP2",
      "path": "3"
    },
    "666": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2080,
        2089
      ],
      "op": "DUP6",
      "path": "3"
    },
    "667": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2079
      ],
      "op": "DUP9",
      "path": "3"
    },
    "668": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP9",
      "path": "3"
    },
    "669": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "CALL",
      "path": "3"
    },
    "670": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "671": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "POP",
      "path": "3"
    },
    "672": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "POP",
      "path": "3"
    },
    "673": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "POP",
      "path": "3"
    },
    "674": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "POP",
      "path": "3"
    },
    "675": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "676": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP1",
      "path": "3"
    },
    "677": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "678": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B3"
    },
    "681": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "682": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "683": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "685": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "DUP1",
      "path": "3"
    },
    "686": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "687": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "688": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "690": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "REVERT",
      "path": "3"
    },
    "691": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "692": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2060,
        2090
      ],
      "op": "POP",
      "path": "3"
    },
    "693": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2104,
        2128
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x2BC"
    },
    "696": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2104,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F1"
    },
    "699": {
      "fn": "Whitelist.addAddressToWhitelist",
      "jump": "i",
      "offset": [
        2104,
        2128
      ],
      "op": "JUMP",
      "path": "3"
    },
    "700": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2104,
        2128
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "701": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2195,
        2218
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x1"
    },
    "703": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2195,
        2218
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "704": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2173,
        2219
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "706": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2173,
        2219
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "707": {
      "op": "SWAP1"
    },
    "708": {
      "op": "DUP2"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "3"
    },
    "711": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2183,
        2193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "712": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2173,
        2219
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x2FA305869F2DD2CD92BE4E2C350BA91AA98743277A62DAEE658FE8788CF09807"
    },
    "745": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2173,
        2219
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "748": {
      "op": "ADD"
    },
    "749": {
      "fn": "Whitelist.addAddressToWhitelist",
      "offset": [
        2173,
        2219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252"
    },
    "752": {
      "op": "JUMP"
    },
    "753": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1310,
        1794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "754": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1441,
        1451
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "755": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "757": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "758": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "DUP2",
      "path": "3"
    },
    "759": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "760": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1440
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "762": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "764": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "765": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "767": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "768": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "769": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "770": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "772": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1420,
        1452
      ],
      "op": "AND",
      "path": "3"
    },
    "773": {
      "branch": 14,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1419,
        1452
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "774": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x356"
    },
    "777": {
      "branch": 14,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "778": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "780": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "DUP2",
      "path": "3"
    },
    "789": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "792": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "794": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "DUP3",
      "path": "3"
    },
    "795": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "ADD",
      "path": "3"
    },
    "796": {
      "op": "MSTORE"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "801": {
      "op": "DUP3"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH32",
      "value": "0x4164647265737320416C7265616479204C6973746564203A2F00000000000000"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "839": {
      "op": "DUP3"
    },
    "840": {
      "op": "ADD"
    },
    "841": {
      "op": "MSTORE"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "844": {
      "op": "ADD"
    },
    "845": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "846": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "848": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "849": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "850": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "851": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "SUB",
      "path": "3"
    },
    "852": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "853": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "854": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1411,
        1482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "855": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1578,
        1601
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "857": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1578,
        1601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "858": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1552,
        1575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "860": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1552,
        1575
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "861": {
      "branch": 15,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1552,
        1601
      ],
      "op": "LT",
      "path": "3"
    },
    "862": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B5"
    },
    "865": {
      "branch": 15,
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "866": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "868": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "877": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "880": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "882": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "883": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "884": {
      "op": "MSTORE"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "889": {
      "op": "DUP3"
    },
    "890": {
      "op": "ADD"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "op": "PUSH32",
      "value": "0x4D6178204E756D626572206F6620416464726573736573204163686965766564"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "927": {
      "op": "DUP3"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH3",
      "value": "0x40745"
    },
    "934": {
      "op": "PUSH1",
      "value": "0xEB"
    },
    "936": {
      "op": "SHL"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "ADD"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34D"
    },
    "948": {
      "op": "JUMP"
    },
    "949": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1544,
        1641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "950": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1707,
        1717
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 10
    },
    "951": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "953": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "954": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "955": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "956": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "958": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "960": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "961": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "963": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "964": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1718
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "965": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "966": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "969": {
      "op": "NOT"
    },
    "970": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "AND",
      "path": "3"
    },
    "971": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1721,
        1725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "973": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "974": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "975": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "OR",
      "path": "3"
    },
    "976": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "977": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "978": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1686,
        1725
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "979": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 11
    },
    "980": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "981": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "982": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DE"
    },
    "985": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "DUP4",
      "path": "3"
    },
    "986": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x521"
    },
    "989": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "jump": "i",
      "offset": [
        1762,
        1787
      ],
      "op": "JUMP",
      "path": "3"
    },
    "990": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "991": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "992": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "993": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "POP",
      "path": "3"
    },
    "994": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "995": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "offset": [
        1762,
        1787
      ],
      "op": "POP",
      "path": "3"
    },
    "996": {
      "fn": "Whitelist._AddAddressToWhitelist",
      "jump": "o",
      "offset": [
        1310,
        1794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "997": {
      "op": "JUMPDEST"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1002": {
      "op": "DUP3"
    },
    "1003": {
      "op": "DUP5"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "op": "SLT"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3F7"
    },
    "1010": {
      "op": "JUMPI"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "DUP1"
    },
    "1014": {
      "op": "REVERT"
    },
    "1015": {
      "op": "JUMPDEST"
    },
    "1016": {
      "op": "DUP2"
    },
    "1017": {
      "op": "CALLDATALOAD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "op": "DUP2"
    },
    "1027": {
      "op": "AND"
    },
    "1028": {
      "op": "DUP2"
    },
    "1029": {
      "op": "EQ"
    },
    "1030": {
      "op": "PUSH2",
      "value": "0x40E"
    },
    "1033": {
      "op": "JUMPI"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1036": {
      "op": "DUP1"
    },
    "1037": {
      "op": "REVERT"
    },
    "1038": {
      "op": "JUMPDEST"
    },
    "1039": {
      "op": "SWAP4"
    },
    "1040": {
      "op": "SWAP3"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "op": "POP"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "jump": "o",
      "op": "JUMP"
    },
    "1045": {
      "op": "JUMPDEST"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1048": {
      "op": "DUP1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "DUP4"
    },
    "1052": {
      "op": "DUP6"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "op": "SLT"
    },
    "1055": {
      "op": "ISZERO"
    },
    "1056": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "1059": {
      "op": "JUMPI"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1062": {
      "op": "DUP1"
    },
    "1063": {
      "op": "REVERT"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "DUP3"
    },
    "1066": {
      "op": "CALLDATALOAD"
    },
    "1067": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1076": {
      "op": "DUP1"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "GT"
    },
    "1079": {
      "op": "ISZERO"
    },
    "1080": {
      "op": "PUSH2",
      "value": "0x440"
    },
    "1083": {
      "op": "JUMPI"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1086": {
      "op": "DUP1"
    },
    "1087": {
      "op": "REVERT"
    },
    "1088": {
      "op": "JUMPDEST"
    },
    "1089": {
      "op": "DUP2"
    },
    "1090": {
      "op": "DUP6"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "op": "SWAP2"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "op": "DUP6"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1097": {
      "op": "DUP4"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "SLT"
    },
    "1100": {
      "op": "PUSH2",
      "value": "0x454"
    },
    "1103": {
      "op": "JUMPI"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1106": {
      "op": "DUP1"
    },
    "1107": {
      "op": "REVERT"
    },
    "1108": {
      "op": "JUMPDEST"
    },
    "1109": {
      "op": "DUP2"
    },
    "1110": {
      "op": "CALLDATALOAD"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "DUP2"
    },
    "1113": {
      "op": "GT"
    },
    "1114": {
      "op": "ISZERO"
    },
    "1115": {
      "op": "PUSH2",
      "value": "0x463"
    },
    "1118": {
      "op": "JUMPI"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "DUP1"
    },
    "1122": {
      "op": "REVERT"
    },
    "1123": {
      "op": "JUMPDEST"
    },
    "1124": {
      "op": "DUP7"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "op": "DUP3"
    },
    "1128": {
      "op": "DUP6"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "GT"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x475"
    },
    "1136": {
      "op": "JUMPI"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "REVERT"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "op": "SWAP3"
    },
    "1145": {
      "op": "SWAP1"
    },
    "1146": {
      "op": "SWAP3"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "SWAP7"
    },
    "1149": {
      "op": "SWAP2"
    },
    "1150": {
      "op": "SWAP6"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "op": "SWAP1"
    },
    "1153": {
      "op": "SWAP4"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "op": "POP"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "jump": "o",
      "op": "JUMP"
    },
    "1159": {
      "op": "JUMPDEST"
    },
    "1160": {
      "op": "DUP3"
    },
    "1161": {
      "op": "ISZERO"
    },
    "1162": {
      "op": "ISZERO"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "MSTORE"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1171": {
      "op": "DUP2"
    },
    "1172": {
      "op": "DUP5"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "DUP4"
    },
    "1176": {
      "op": "MLOAD"
    },
    "1177": {
      "op": "DUP1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1180": {
      "op": "DUP6"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1185": {
      "op": "JUMPDEST"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "DUP2"
    },
    "1188": {
      "op": "LT"
    },
    "1189": {
      "op": "ISZERO"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1193": {
      "op": "JUMPI"
    },
    "1194": {
      "op": "DUP6"
    },
    "1195": {
      "op": "DUP2"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "op": "DUP4"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "op": "MLOAD"
    },
    "1200": {
      "op": "DUP6"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "DUP3"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "PUSH2",
      "value": "0x4A1"
    },
    "1212": {
      "op": "JUMP"
    },
    "1213": {
      "op": "JUMPDEST"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1219": {
      "op": "DUP3"
    },
    "1220": {
      "op": "DUP7"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1228": {
      "op": "NOT"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1231": {
      "op": "DUP4"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "AND"
    },
    "1234": {
      "op": "DUP6"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "op": "SWAP3"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "SWAP4"
    },
    "1242": {
      "op": "SWAP3"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "jump": "o",
      "op": "JUMP"
    },
    "1247": {
      "op": "JUMPDEST"
    },
    "1248": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "REVERT"
    },
    "1269": {
      "op": "JUMPDEST"
    },
    "1270": {
      "op": "DUP2"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "SUB"
    },
    "1273": {
      "op": "DUP2"
    },
    "1274": {
      "op": "DUP2"
    },
    "1275": {
      "op": "GT"
    },
    "1276": {
      "op": "ISZERO"
    },
    "1277": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1280": {
      "op": "JUMPI"
    },
    "1281": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "1287": {
      "jump": "i",
      "op": "JUMP"
    },
    "1288": {
      "op": "JUMPDEST"
    },
    "1289": {
      "op": "SWAP3"
    },
    "1290": {
      "op": "SWAP2"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "jump": "o",
      "op": "JUMP"
    },
    "1294": {
      "op": "JUMPDEST"
    },
    "1295": {
      "op": "DUP1"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "DUP1"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "GT"
    },
    "1301": {
      "op": "ISZERO"
    },
    "1302": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1305": {
      "op": "JUMPI"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1309": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "1312": {
      "jump": "i",
      "op": "JUMP"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "DUP3"
    },
    "1319": {
      "op": "ADD"
    },
    "1320": {
      "op": "PUSH2",
      "value": "0x533"
    },
    "1323": {
      "op": "JUMPI"
    },
    "1324": {
      "op": "PUSH2",
      "value": "0x533"
    },
    "1327": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "1330": {
      "jump": "i",
      "op": "JUMP"
    },
    "1331": {
      "op": "JUMPDEST"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "SWAP1"
    },
    "1337": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4547186bcf2c960ed3884d48e841723efd88d3a0",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// imports\nimport \"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\";\n\ncontract Whitelist is KeeperCompatibleInterface{\n    // Address to receive payments after time or account limit exceeds\n    address payable public immutable feeAccount;\n\n    // Max number of addresses\n    uint256 public maxWhitelistedAddresses;\n\n    // Counter of actual number of listed addresses\n    uint256 public numAddressesWhitelisted;\n\n    // Amount fee to enter whitelist\n    uint256 public feeAmount;\n    \n    // variable to store deploy date\n    uint lastTimeStamp;\n    uint interval;\n\n    // Mapping to keep track of saved addresses\n    mapping(address => bool) public whitelistedAddresses;\n\n    // event to notify a new address is submitted\n    event Added(address indexed _user, uint256 _numAddressesWhitelisted);\n    event PaidAdded(address indexed _user, uint256 _numAddressesWhitelisted);\n\n    //  Constructor, set max number of adrs\n    constructor(uint256 _maxWhitelistedAddresses, uint256 _feeAmount, uint _interval){\n        maxWhitelistedAddresses = _maxWhitelistedAddresses;\n        feeAmount=_feeAmount;\n        lastTimeStamp=block.timestamp;\n        feeAccount=payable(msg.sender);\n        interval=_interval;\n    }\n\n    // function to add address free\n    function _AddAddressToWhitelist() internal{\n        // require address is not already listed\n        require(!whitelistedAddresses[msg.sender], \"Address Already Listed :/\");\n\n        // require max number of adrs not achieved\n        require(numAddressesWhitelisted < maxWhitelistedAddresses, \"Max Number of Addresses Achieved :(\");\n\n        // add address to mapping\n        whitelistedAddresses[msg.sender] = true;\n\n        // update counter\n        numAddressesWhitelisted++;\n    }\n\n    // Function to add address\n    function addAddressToWhitelist() public payable{\n        if(feeAmount == 0){\n            _AddAddressToWhitelist();\n            // emit event\n            emit Added(msg.sender, numAddressesWhitelisted);\n        }else{\n            feeAccount.transfer(feeAmount);\n            _AddAddressToWhitelist();\n            // emit event\n            emit PaidAdded(msg.sender, numAddressesWhitelisted);\n        }\n    }\n\n    function checkUpkeep(bytes calldata /* checkData */) external override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        // check if enough time have passed to update price\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n    }\n    \n    function performUpkeep(bytes calldata /* performData */) external override {\n        //We highly recommend revalidating the upkeep in the performUpkeep function\n        if ((block.timestamp - lastTimeStamp) > interval ) {\n            lastTimeStamp = block.timestamp;\n            // increase fee price to register\n            feeAmount = feeAmount + (2 ether);\n        }\n    }\n}",
  "sourceMap": "129:2767:3:-:0;;;983:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1074:23;:50;;;;1134:9;:20;1178:15;1164:13;:29;1222:10;1203:30;;1243:8;:18;129:2767;;14:306:4;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;216:9;210:16;200:26;;266:2;255:9;251:18;245:25;235:35;;310:2;299:9;295:18;289:25;279:35;;14:306;;;;;:::o;:::-;129:2767:3;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Whitelist.sol",
  "type": "contract"
}